整合springCache简化缓存开发
1）引入依赖  spring-boot-starter-data-redis  spring-boot-starter-cache
2) 写配置
    2.1）自动配置好了缓存管理器RedisCacheManager
    2.2) 配置使用redis做缓存 spring.cache.type=redis
3)测试使用缓存
@Cacheable: Triggers cache population.

@CacheEvict: Triggers cache eviction.

@CachePut: Updates the cache without interfering with the method execution.

@Caching: Regroups multiple cache operations to be applied on a method.

@CacheConfig: Shares some common cache-related settings at class-level.
3.1 开启缓存功能 @EnableCaching
3.2 写注解
3.3 自定义
   3.3.1 指定生成的缓存使用key
   3.3.2 指定缓存的数据存活时间
   3.3.3 将数据保存为json格式

   RedisCacheConfiguration

springCache的不足：
1读模式
   缓存穿透：查询一个null数据。解决：缓存空数据：cache-null-values=true
   缓存击穿：大量并发进来同时查询一个正好过期的数据。解决：加锁。默认无锁sync=true
   缓存雪崩：大量的key同时过期。解决加上过期时间 spring.cache.redis.time-to-live=360000
2写模式（缓存与数据库不一致）
  1）读写加锁
  2）引入canal，感知到mysql的更新去更新数据库
  3） 读多写多的直接去数据库查询
  总结。常规数据(读多写少，即时性、一致性要求不高的数据）完全可以使用spring-cache




